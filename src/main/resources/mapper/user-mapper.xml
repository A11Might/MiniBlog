<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xidian.miniblog.dao.UserMapper">

    <sql id="selectFields">
        id, username, password, salt, email, status, activation_code, header_url, create_time
    </sql>

    <sql id="insertFields">
        username, password, salt, email, status, activation_code, header_url, create_time
    </sql>

    <select id="selectUserById" resultType="com.xidian.miniblog.entity.User">
        select <include refid="selectFields"></include>
        from user
        where id = #{userId}
    </select>

    <select id="selectUserByUsername" resultType="com.xidian.miniblog.entity.User">
        select <include refid="selectFields"></include>
        from user
        where username = #{username}
    </select>

    <select id="selectUserByEmail" resultType="com.xidian.miniblog.entity.User">
        select <include refid="selectFields"></include>
        from user
        where email = #{email}
    </select>

    <insert id="insertUser" parameterType="com.xidian.miniblog.entity.User" keyProperty="id">
        insert into user (<include refid="insertFields"></include>)
        values(#{username},#{password},#{salt},#{email},#{status},#{activationCode},#{headerUrl},#{createTime})
    </insert>

    <update id="updateUserStatus">
        update user set status = #{status} where id = #{userId}
    </update>

    <update id="updateUserPassword">
        update user set password = #{password} where id = #{userId}
    </update>

    <update id="updateUserHeaderUrl">
        update user set header_url = #{headerUrl} where id = #{userId}
    </update>

</mapper>